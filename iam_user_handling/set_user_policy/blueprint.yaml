tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint import AWS IAM policy and user then attach the policy to the user.

imports:
  - https://cloudify.co/spec/cloudify/6.2.0/types.yaml
  - plugin:cloudify-terraform-plugin?version= >=0.15.0

inputs:

  aws_iam_policyname:
    type: string
    required: true

  aws_iam_policyarn:
    type: string
    required: true

  aws_iam_user:
    type: string
    required: true

  aws_region_name:
    type: string
    required: true

  location:
    type: string
    default: https://github.com/ahmadiesa-abu/cfy_remediations/archive/refs/heads/master.zip

  source_path:
    type: string
    default: 'terraform_modules/aws_iam_userpolicy'

node_templates:

  terraform:
    type: cloudify.nodes.terraform

  cloud_resources:
    type: cloudify.nodes.terraform.Module
    properties:
      resource_config:
        source:
          location: { get_input: location }
        source_path: { get_input: source_path }
        variables:
          access_key: { get_secret: aws_access_key_id }
          secret_key: { get_secret: aws_secret_access_key }
          aws_region: { get_input: aws_region_name }
          policy_name: { get_input: aws_iam_policyname }
          iam_user : { get_input: aws_iam_user }
        environment_variables:
          TF_REGISTRY_CLIENT_TIMEOUT: "20"
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: tf.cloudify_tf.tasks.import_resource
          inputs:
            resource_address: 'aws_iam_policy.policy'
            resource_id: { get_input: aws_iam_policyarn }
        start:
          implementation: tf.cloudify_tf.tasks.import_resource
          inputs:
            resource_address: 'aws_iam_user.user'
            resource_id: { get_input: aws_iam_user }
        poststart:
          implementation: tf.cloudify_tf.tasks.apply
        delete: {}


    relationships:
      - target: terraform
        type: cloudify.terraform.relationships.run_on_host
